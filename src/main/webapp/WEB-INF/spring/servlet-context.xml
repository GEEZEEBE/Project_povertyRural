<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:mvc="http://www.springframework.org/schema/mvc"
   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Support Multiful language -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:messages/back</value>	<!-- path -->
				<value>classpath:messages/front</value>	<!-- path -->
				<value>classpath:messages/common</value>	<!-- path -->
				<value>classpath:messages/validation</value>	<!-- path -->
			</list>
		</property>
	    <property name="defaultEncoding" value="UTF-8"/>	<!-- encoding for multi lang -->
	    <property name="cacheSeconds" value="3"/>
	</bean>
		
	 <mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		    <property name="paramName" value="lang" />
		</bean>
	 </mvc:interceptors>
	 
	<bean id="localeResolver"
	    class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
	    <property name="defaultLocale" value="en"/>
	</bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</bean>
	<!-- bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean -->
	
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>

	<!-- Preper Resolvers -->	
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<!--  property name="alwaysUseFullPath" value="true" /-->
		<property name="customArgumentResolvers">
		    <list>
		      <bean class="com.skt.mars.adm.cm.MapArgumentResolver"/>
		      <bean class="com.skt.mars.adm.cm.MapFileUploadResolver"/>
		    </list>
		</property>
	</bean>
	
	<mvc:annotation-driven />

	<!-- tiles Configuration -->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
	<!-- bean id="tilesConfigurer" class="com.essentialspring.util.SpringTilesConfigurer" -->
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles2def/tilesdef.xml</value>
				<!-- value>/WEB-INF/tiles2def/tilesdef_back.xml</value>
				<value>/WEB-INF/tiles2def/tilesdef_front.xml</value -->
			</list>
		</property>
		<property name="preparerFactoryClass"
			value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory" />
	</bean>

	<!-- Menu class --> 
	<bean id="menuPreparer" class="com.skt.mars.adm.cm.ut.MenuPreparer" />

    <!-- ApplicationContextAware intrefaces, with singleton pattern -->
	<bean class="com.skt.mars.adm.cm.SpringApplicationContext"></bean>
	<bean id="commonCodeService" class="com.skt.mars.adm.cm.CommonCodeServiceImpl"></bean>
    
	
	<context:component-scan base-package="com.skt.mars.adm" />
	<context:component-scan base-package="com.skt.mars.usr" />
	<!-- service --> 

   <!-- file upload -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
</beans>
